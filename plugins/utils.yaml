# Utils
# Filesystem function
# TODO: abbreviate some commands
- repo: tpope/vim-eunuch

# Man in vim
- { repo: jez/vim-superman, on_ft: man }

# Filesystem browsing
- repo: justinmk/vim-dirvish
  hook_add: source $VIM_PATH/modules/dirvish.vim

# Open under cursor

- repo: tyru/open-browser.vim
  hook_source: |
      nmap go <Plug>(openbrowser-smart-search)
      vmap go <Plug>(openbrowser-smart-search)
      let g:openbrowser_browser_commands = [
        \ {"name": "firefox",
        \  "args": ["{browser}", "{uri}"]},
      \]
      let g:openbrowser_default_search = 'duckduckgo'

# Terminal integration -------------------------------------

- repo: voldikss/vim-floaterm
  on_cmd: [ FloatermNew,FloatermToggle,FloatermPrev,FloatermNext,FloatermSend ]
  hook_source: source  $VIM_PATH/modules/floaterm.vim

# Git ------------------------------------------------------

# Show a diff in sign column
- repo: mhinz/vim-signify
  hook_add: |
    let g:signify_vcs_list = [ 'git' ]
    let g:signify_sign_show_count = 0
    let g:signify_disable_by_default = 0
    let g:signify_sign_show_text = 1
    let g:signify_sign_add               = '+'
    let g:signify_sign_delete            = '*'
    let g:signify_sign_delete_first_line = '*'
    let g:signify_sign_change            = '!'

# TODO: Fix unfolading after staging a file
- repo: jreybert/vimagit
  on_cmd: Magit

- { repo: hotwatermorning/auto-git-diff, on_ft: gitrebase }

  # Git Integration:::::::::::::::::::::::::::::::::::::::::::::::::::::
- repo: tpope/vim-fugitive

# Use git directly from vim. It adds the :Git command or :G for short that
# runs git status and shows the result in a split window. You can then use the
# s keyboard shortcut to stage (git add) a file, u to unstage (git reset) a
# file. After you stage the files, you can press cc to create a commit. I
# don't know how to do a git push yet so that's something I still have to
# learn. It would be pretty handy if I could git push code and deploy without
# leaving vim, too.

  # Enhancements 
# Enhanced diff mode
- repo: chrisbra/vim-diff-enhanced 
  hook_add: |
    if &diff
      let &diffexpr='EnhancedDiff#Diff("git diff", "--diff-algorithm=patience")'
    endif

# Show git messages (git balme)
# https://github.com/APZelos/blamer.nvim

# Other ---------------------------------------------------------

# Repel
- repo: ChristianChiarulli/codi.vim
  hook_add: |
    highlight CodiVirtualText guifg=green
    let g:codi#virtual_text_prefix = "‚ùØ "
    let g:codi#aliases = {
                      \ 'javascript.jsx': 'javascript',
                      \ }
# Laravel Integration
- repo: noahfrederick/vim-composer
- repo: noahfrederick/vim-laravel

# Graphql Integation

- repo: heavenshell/vim-gql
  on_cmd: Gql
  hook_source: |
      let g:gql_servers = [
        \ {
        \   'host': 'https://api.github.com/graphql',
        \   'headers': {'Authorization': 'bearer YOUR_TOKEN'},
        \ },
        \ {
        \   'host': 'https://api.spacex.land/graphql/',
        \   'headers': {'Content-Type': 'application/json'},
        \ },
        \ {
        \   'host': 'http://localhost:8000/graphql/',
        \   'headers': {'Content-Type': 'application/json'},
        \ },
        \]
# Required for gql
- repo: mattn/webapi-vim

# Better expereince editing html files
# - repo: mattn/emmet-vim
#   on_event: InsertEnter
#   on_ft: [ html, css, jsx, javascript, javascript.jsx ]
#   hook_source: |
#     let g:use_emmet_complete_tag = 0
#     let g:user_emmet_install_global = 0
#     let g:user_emmet_install_command = 0
#     let g:user_emmet_mode = 'i'
# 
